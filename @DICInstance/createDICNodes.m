function obj = createDICNodes( obj, app )


obj.TreeNodes.DICData = struct();
% DIC Nodes - default variables
DefaultDICVariables = app.ConstantValues.DICVariables;
DefaultDICVariableNames = app.ConstantValues.DICVariableNames ...
    ( app.Default.LanguageSelection );
for i = 1:length( DefaultDICVariables )
    VariableName = DefaultDICVariables{i};
    Node = uitreenode( obj.TreeNodes.DIC, ...
        'Text', DefaultDICVariableNames.( VariableName ), ...
        'UserData', struct( 'Parent', 'Tree', ...
                            'NodeType', 'DICData', ...
                            'VariableName',  VariableName ), ...
        'NodeData', struct( 'Serial', obj.Serial, ...
                            'Enable', true ), ...
        'ContextMenu', app.TreeContextMenu.DICData );
    if isfield( obj.DIC.Data, VariableName )
        EnableDisableNode( app, Node, 'on' )
    else; EnableDisableNode( app, Node, 'off' )
    end
    obj.TreeNodes.DICData.(VariableName) = Node;
end
% DIC Nodes - user defined variables
UserDICVariables = app.DICPreprocessMethods. ...
        ( obj.DIC.PreprocessMethod ).VariableNames;
% 
if ~isempty( UserDICVariables )
    for i = 1:length( UserDICVariables )
        VariableName = UserDICVariables{i};
        Node = uitreenode( obj.TreeNodes.DIC, ...
            'Text', VariableName, ...
            'UserData', struct( 'Parent', 'Tree', ...
                                'NodeType', 'DICData', ...
                                'VariableName',  VariableName ), ...
            'NodeData', struct( 'Serial', obj.Serial, ...
                                'Enable', true ), ...
            'ContextMenu', app.TreeContextMenu.DICData );  
        obj.TreeNodes.DICData.(VariableName) = Node;
    end
end
% DIC Nodes - claculated variables
ClaculatedDICVariables = setdiff( ...
    fieldnames( obj.DIC.Data ), [ DefaultDICVariables, UserDICVariables ] );
if ~isempty( ClaculatedDICVariables )
    for i = 1:length( ClaculatedDICVariables )
        VariableName = ClaculatedDICVariables{i};
        Name = app.DICCalculateMethods.( VariableName ). ...
            Name{app.Default.LanguageSelection};
        Node = uitreenode( obj.TreeNodes.DIC, ...
            'Text', Name, ...
            'UserData', struct( 'Parent', 'Tree', ...
                                'NodeType', 'DICData', ...
                                'VariableName',  VariableName ), ...
            'NodeData', struct( 'Serial', obj.Serial, ...
                                'Enable', true ), ...
            'ContextMenu', app.TreeContextMenu.DICData );  
        obj.TreeNodes.DICData.(VariableName) = Node;
    end
end